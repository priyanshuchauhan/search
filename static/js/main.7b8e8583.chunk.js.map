{"version":3,"sources":["logo.svg","components/Query.js","utils/constants.js","utils/apiUtil.js","styles/AppStyles.js","components/Dropdown.js","components/Form.js","components/Profile/Profile.js","components/GitSearch.js","App.js","serviceWorker.js","index.js","components/QueryList.js"],"names":["module","exports","React","require","props","className","title","paragraph","style","padding","display","textAlign","target","href","link","gitURL","GET","getShipmentReport","a","page","id","limit","queryString","getShipmentReporttDI","fetch","method","data","requestURL","requestObject","headers","body","JSON","stringify","then","response","json","Title","styled","h1","section","BootstrapInput","withStyles","theme","root","marginTop","spacing","input","borderRadius","position","backgroundColor","palette","background","paper","border","fontSize","transition","transitions","create","fontFamily","join","borderColor","boxShadow","InputBase","useStyles","makeStyles","margin","CustomizedSelects","classes","useState","age","setAge","handleChange","event","value","FormControl","InputLabel","htmlFor","Select","labelId","onChange","MenuItem","NativeSelect","aria-label","Form","state","querySearch","handleSearch","setState","noSpaceText","replace","axios","get","params","action","datatype","search","origin","resp","onInput","width","this","type","placeholder","required","aria-hidden","Component","Profile","src","image","alt","username","List","repos","map","repo","key","ListItem","button","component","html_url","ListItemText","primary","name","GitSearch","searched","loading","onFormSubmit","e","avatar_url","preventDefault","res","repos_url","catch","onUsernameChange","process","REACT_APP_NAME","alignItems","onSubmit","TextField","flex","label","Button","App","currentPage","setShipmentData","setData","useEffect","shipmentList","path","Box","color","clone","backgroundImage","Container","maxWidth","rel","queryResult","rawData","searchResult","index","query","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","Query"],"mappings":"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","file":"static/js/main.7b8e8583.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","var React = require('react');\r\n\r\nconst Query = (props) => {\r\n  return (\r\n    <div className='result'>\r\n      <div className='bubble'>\r\n        <h2>{props.title}</h2>\r\n        <div className=\"text\">{props.paragraph}</div>\r\n        <a style={{padding: '0px 10px 5px', display: 'block', textAlign:'right'}} target=\"_blank\" href={props.link}>See full article</a>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nmodule.exports = Query;\r\n","export const baseURL = `http://localhost:3000`\r\nexport const gitURL = `${baseURL}/git`\r\n\r\nexport const GET = 'GET'\r\nexport const POST = 'POST'\r\nexport const PATCH = 'PATCH'","import { gitURL, GET, PATCH } from \"./constants\";\r\n// import apiMock from \"./mockAPIData\";\r\n\r\n/**\r\n * Factory function to inject fetch dependency for testing\r\n *\r\n * @param {String} page for pagination\r\n * @returns {Promise} API call promise\r\n */\r\nexport const getShipmentReport = async (page = 1, id = null, limit = 20) => {\r\n  let queryString = `page=${page}&_limit=${limit}`\r\n  if (id) {\r\n    queryString = `${queryString}&id=${id}`\r\n  }\r\n  return getShipmentReporttDI(fetch, GET, queryString)\r\n}\r\n\r\nexport const updateShipmentData = async (data = {}) =>\r\n  getShipmentReporttDI(fetch, PATCH, data);\r\n\r\n/**\r\n * Function to make async call to get shipment details\r\n *\r\n * @param {function} fetch Dependency Injection for testing\r\n * @param {String} page for pagination\r\n * @returns {Promise} API call promise\r\n */\r\nexport async function getShipmentReporttDI(fetch, method = GET, data = {}) {\r\n  /* Used to to deploy to github pages\r\n    const promise = new Promise((resolve, reject) => {\r\n      resolve(apiMock.shipments);\r\n    });\r\n    return promise;\r\n  */\r\n\r\n  let requestURL = gitURL;\r\n  const requestObject = {\r\n    method,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n  if (method === GET) {\r\n    requestURL = `${requestURL}?${data}`;\r\n  } else {\r\n    requestObject.body = JSON.stringify(data);\r\n  }\r\n  return await fetch(requestURL, requestObject).then(\r\n    async response => await response.json()\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 1.5em;\r\n  text-align: center;\r\n  color: palevioletred;\r\n`;\r\n\r\nexport const Wrapper = styled.section`\r\n  padding: 1.5em;\r\n  background: papayawhip;\r\n`;\r\n\r\n","import React from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    'label + &': {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '1px solid #ced4da',\r\n    fontSize: 16,\r\n    padding: '10px 26px 10px 12px',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:focus': {\r\n      borderRadius: 4,\r\n      borderColor: '#80bdff',\r\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSelects() {\r\n  const classes = useStyles();\r\n  const [age, setAge] = React.useState('');\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n  };\r\n  return (\r\n    <div>\r\n      <FormControl className={classes.margin}>\r\n        <InputLabel htmlFor=\"demo-customized-textbox\">Age</InputLabel>\r\n        <BootstrapInput id=\"demo-customized-textbox\" />\r\n      </FormControl>\r\n      <FormControl className={classes.margin}>\r\n        <InputLabel id=\"demo-customized-select-label\">Age</InputLabel>\r\n        <Select\r\n          labelId=\"demo-customized-select-label\"\r\n          id=\"demo-customized-select\"\r\n          value={age}\r\n          onChange={handleChange}\r\n          input={<BootstrapInput />}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.margin}>\r\n        <InputLabel htmlFor=\"demo-customized-select-native\">Age</InputLabel>\r\n        <NativeSelect\r\n          id=\"demo-customized-select-native\"\r\n          value={age}\r\n          onChange={handleChange}\r\n          input={<BootstrapInput />}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Dropdown from \"./Dropdown\"\r\n\r\nclass Form extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { querySearch: \"\" };\r\n    this.handleSearch = (event) => {\r\n      this.setState({ querySearch: event.target.value });\r\n      let noSpaceText = event.target.value.replace(/\\s/, \"%20\");\r\n      if (!noSpaceText) {\r\n        this.props.onInput(null);\r\n        return;\r\n      }\r\n      axios\r\n        .get(`https://en.wikipedia.org/w/api.php`, {\r\n          params: {\r\n            action: \"opensearch\",\r\n            datatype: \"json\",\r\n            limit: 15,\r\n            search: noSpaceText,\r\n            origin: \"*\",\r\n          },\r\n        })\r\n        .then((resp) => {\r\n          this.props.onInput(resp.data);\r\n        });\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <form>\r\n        <input\r\n          style={{ margin: \"10px 0px\", width: \"75%\" }}\r\n          value={this.state.querySearch}\r\n          onChange={this.handleSearch}\r\n          type=\"text\"\r\n          placeholder=\"Search here\"\r\n          required\r\n        />\r\n        <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n        <Dropdown/>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\n// import material-ui components\r\nimport { List, ListItem, ListItemText } from '@material-ui/core';\r\n\r\nexport default function Profile(props) {\r\n  return (\r\n    <div className=\"profile\">\r\n      <img src={props.image} alt={`Profile of ${props.username}`} />\r\n      <h2>{props.username}</h2>\r\n      <List>\r\n        {\r\n          props.repos.map((repo, key) => {\r\n            return (\r\n              <ListItem\r\n                button\r\n                component=\"a\"\r\n                href={repo.html_url}\r\n                target=\"__blank\"\r\n                key={key}\r\n              >\r\n                <ListItemText primary={repo.name} />\r\n              </ListItem>\r\n            )\r\n          })\r\n        }\r\n      </List>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n// import custom components\r\nimport Profile from './Profile/Profile';\r\n// import material-ui components\r\nimport { TextField, Button, CircularProgress as Loader } from '@material-ui/core';\r\n\r\nclass GitSearch extends Component {\r\n  state = {\r\n    username: '',\r\n    image: '',\r\n    searched: false,\r\n    repos: [],\r\n    loading: false\r\n  }\r\n\r\n  onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      loading: true\r\n    });\r\n\r\n    var avatar_url;\r\n\r\n    axios.get(`https://api.github.com/users/${this.state.username}`)\r\n    .then(res => {\r\n      avatar_url = res.data.avatar_url;\r\n      return axios.get(res.data.repos_url);\r\n    })\r\n    .then(res => {\r\n      this.setState({\r\n        loading: false,\r\n        repos: res.data,\r\n        image: avatar_url,\r\n        searched: true\r\n      });\r\n    })\r\n    .catch(() => {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    });\r\n  }\r\n\r\n  onUsernameChange = e => {\r\n    this.setState({\r\n      searched: false,\r\n      username: e.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"formContainer\">\r\n          <h1 style={{ marginTop: 0 }}>{ process.env.REACT_APP_NAME }</h1>\r\n          <form\r\n            style={{ alignItems: \"flex-end\", display: \"flex\" }}\r\n            onSubmit={this.onFormSubmit}\r\n          >\r\n            <TextField\r\n              style={{ flex: 1 }}\r\n              onChange={this.onUsernameChange}\r\n              type=\"text\"\r\n              label=\"Enter a Github username...\"\r\n            />\r\n            <Button type=\"submit\">Search</Button>\r\n          </form>\r\n\r\n          {\r\n            this.state.loading\r\n              ? <Loader style={{ display: \"block\", margin: \"15px auto\" }} />\r\n              : null\r\n          }\r\n\r\n          {\r\n            this.state.searched\r\n              && (\r\n                <Profile\r\n                  username={this.state.username}\r\n                  image={this.state.image}\r\n                  repos={this.state.repos}\r\n                />\r\n              )\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GitSearch;\r\n","import React, { useState, useEffect } from \"react\";\nimport { getShipmentReport } from \"./utils/apiUtil\";\nimport { Title } from \"./styles/AppStyles\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\n\nimport logo from \"./logo.svg\";\nimport Form from \"./components/Form\";\nimport GitSearch from \"./components/GitSearch\";\nimport QueryList from \"./components/QueryList\";\n\nfunction App() {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [shipmentData, setShipmentData] = useState([]);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    // Using an async function makes the callback function return a Promise instead of a cleanup function. Hence IIFE\n    (async function anyNameFunction() {\n      const shipmentList = await getShipmentReport(currentPage);\n      shipmentList && setShipmentData(shipmentList);\n    })();\n  }, [currentPage]);\n\n  const normalizeData = (rawData) => {\n    return rawData[1].map(function (title, index) {\n      return {\n        title: title,\n        paragraph: rawData[2][index],\n        link: rawData[3][index],\n      };\n    });\n  };\n\n  const addNewResult = (queryResult) => {\n    if (queryResult === null) {\n      setData([]);\n      return;\n    }\n    const searchResult = normalizeData(queryResult);\n    setData(searchResult);\n  };\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/search-details/:id\">\n          <div>your search page </div>\n        </Route>\n        <Route path=\"/\">\n          <Box color=\"text.primary\" clone \n        style={{\n          backgroundImage: \"url('img/daniel-olahh.jpg')\"\n        }}>\n            <Container maxWidth=\"sm\">\n              <div className=\"container\">\n                <h1>Iluvatar Search</h1>\n                <Title>Programmer Search Engine vicicita !</Title>\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href=\"https://en.wikipedia.org/wiki/Special:Random\"\n                >\n                  <i className=\"fa fa-random\" aria-hidden=\"true\"></i>\n                </a>\n                <Form onInput={addNewResult} />\n                <QueryList query={data} />\n                <GitSearch />\n              </div>\n            </Container>\n          </Box>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","var React = require('react');\r\nvar Query = require('./Query');\r\n\r\nconst QueryList = (props) => {\r\n  let count = 0;\r\n  return (\r\n    <div className='list'>\r\n      {props.query.map(query => <Query key={query.title} {...query} />)}\r\n    </div>\r\n  )\r\n}\r\n\r\nmodule.exports = QueryList;\r\n"],"sourceRoot":""}